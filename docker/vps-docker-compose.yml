version: '3.8'

services:
  # PostgreSQL with multi-tenant schema
  postgres:
    image: postgres:15-alpine
    container_name: avodah-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: avodah_educa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-super_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - avodah-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Supabase (if running as container alternative)
  supabase:
    image: supabase/supabase:latest
    container_name: avodah-supabase
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: avodah_educa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-super_secure_password}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      ANON_KEY: ${ANON_KEY:-your-anon-key}
      SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY:-your-service-role-key}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - avodah-network
    volumes:
      - ./supabase:/app/supabase:ro

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: avodah-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - avodah-network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # MinIO for file storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: avodah-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - avodah-network
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: avodah-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - avodah-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - supabase
      - minio

  # Watchtower for auto updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: avodah-watchtower
    restart: unless-stopped
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_SCHEDULE: "0 0 2 * * *"  # Check for updates daily at 2 AM
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - avodah-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  avodah-network:
    driver: bridge