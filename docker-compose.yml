version: '3.8'

services:
  # PostgreSQL Database with Multi-Tenant SaaS Schema
  postgres:
    image: postgres:15-alpine
    container_name: avodah-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: avodah_educa
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      # Mount SQL scripts for initialization
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
      # Persistent storage
      - postgres_data:/var/lib/postgresql/data
      # Additional SQL files for manual execution
      - ./docker/sql-scripts:/sql-scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d avodah_educa"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - avodah-network

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: avodah-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@avodah.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin-config:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - avodah-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: avodah-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis123
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - avodah-network

  # MinIO for S3-Compatible Object Storage (Alternative to Supabase Storage)
  minio:
    image: minio/minio:latest
    container_name: avodah-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: avodah
      MINIO_ROOT_PASSWORD: avodah123
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - avodah-network

  # Supabase Local (Optional - for complete Supabase experience)
  supabase:
    image: supabase/supabase:latest
    container_name: avodah-supabase
    environment:
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters
      ANON_KEY: your-anon-key
      SERVICE_ROLE_KEY: your-service-role-key
    ports:
      - "8000:8000"  # Supabase API Gateway
      - "3000:3000"  # Supabase Studio
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./supabase:/app/supabase
    restart: unless-stopped
    networks:
      - avodah-network
    profiles:
      - supabase  # Optional service - activate with --profile supabase

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  avodah-network:
    driver: bridge
    name: avodah-network